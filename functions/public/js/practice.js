const RANDOM_QUOTE_API_URL = 'https://api.quotable.io/random'
const quoteDisplayElement = document.getElementById('quote-display')
const quoteInputElement = document.getElementById('input')
const timerElement = document.getElementById('timer')
const TimeendElement = document.getElementById('container')
const CpmElement = document.getElementById('char')
const WpmElement = document.getElementById('words')
const CharElement = document.getElementById('charcontainer')
const WordElement = document.getElementById('wordscontainer')

var CPM = 0;
var TotalCPM = 0;
var flagCPM = 0;
var WPM = 0;
var TotalWPM = 0;
var flagWPM = 0;

document.addEventListener("contextmenu", function(e) {
    e.preventDefault();
})

document.addEventListener("keydown", function(event) {
    if (event.ctrlKey){
        event.preventDefault();
    }
})

document.onkeydown = function(e) {
    if (event.keyCode == 123){
        return false;
    }
    if (e.ctrlKey && e.shiftKey && e.keyCode == "I".charCodeAt(0)){
        return false;
    }
    if (e.ctrlKey && e.shiftKey && e.keyCode == "C".charCodeAt(0)){
        return false;
    }
    if (e.ctrlKey && e.shiftKey && e.keyCode == "J".charCodeAt(0)){
        return false;
    }
    if (e.ctrlKey && e.shiftKey && e.keyCode == "U".charCodeAt(0)){
        return false;
    }
}

/* ----------------------------- */
/* Input Checker */
/* ----------------------------- */

/* ----------------------------- */
/* Char Checker */
/* ----------------------------- */

quoteInputElement.addEventListener('input', () => {
    const arrayQuote = quoteDisplayElement.querySelectorAll('span')
    const arrayValue = quoteInputElement.value.split('')
    if (CPM > 1000 || WPM > 200) {
        TotalCPM = 0;
        CPM = 0;
        TotalWPM = 0;
        WPM = 0;
        renderNewQuote()
    }
    arrayQuote.forEach((characterSpan, index) => {
        const character = arrayValue[index]
        if (character == null) {
            characterSpan.classList.remove('correct')
            characterSpan.classList.remove('incorrect')
            CPM = 0;
        }
        else if (character === characterSpan.innerText) {
            characterSpan.classList.add('correct')
            characterSpan.classList.remove('incorrect')
            CPM++;
            if (flagCPM == 0) {
                CpmElement.innerHTML = TotalCPM + CPM
            }
            else {
                CpmElement.innerHTML = TotalCPM + 1
                flagCPM = 0
            }
        }

        else {
            characterSpan.classList.remove('correct')
            characterSpan.classList.add('incorrect')
            if (CPM > 0) {
                CPM--;
            }
            CpmElement.innerHTML = TotalCPM + CPM
        }
    })

    /* ----------------------------- */
    /* WPM & CPM Adder */
    /* ----------------------------- */

    if (arrayQuote.length === arrayValue.length) {
        if (TotalCPM > 1000 || TotalWPM > 200) {
            TotalCPM = 0;
            CPM = 0;
            TotalWPM = 0;
            WPM = 0;
            renderNewQuote()
        }
        TotalCPM = TotalCPM + CPM
        flagCPM = 1
        renderNewQuote()
        TotalWPM = TotalWPM + WPM
        flagWPM = 1
    }
})

/* ----------------------------- */
/* Word Checker */
/* ----------------------------- */

quoteInputElement.addEventListener('input', () => {
    const arrayQuote = quoteDisplayElement.querySelectorAll('p')
    const arrayValue = quoteInputElement.value.split(' ')
    WPM = arrayValue.length
    if (flagWPM == 0) {
        WpmElement.innerHTML = WPM + TotalWPM;
    }
    else {
        flagWPM = 0
    }
    if (arrayQuote.length - 1 === arrayValue.length && arrayQuote.length != WPM) {
        if (arrayQuote.length === WPM) {
            renderNewQuote()
        }
    }
})


/* ----------------------------- */
/* Random Generator API */
/* ----------------------------- */

function getRandomQuote() {
    return fetch(RANDOM_QUOTE_API_URL)
        .then(response => response.json())
        .then(data => data.content)
}

/* ----------------------------- */
/* Render the quotes generated by the API */
/* ----------------------------- */

async function renderNewQuote() {
    /* Assign variable quote to the generated quote */
    var quotegenerate = await getRandomQuote()
    var quote = quotegenerate.toString().toLowerCase()
    quote = quote.replace(/\./g,'')
    quote = quote.replace(/\,/g,'')
    quote = quote.replace(/\'/g,'')
    quote = quote.replace(/\;/g,'')
    quoteDisplayElement.innerHTML = ''
    /* Insert every letter in a span */
    quote.split('').forEach(character => {
        const characterSpan = document.createElement('span')
        characterSpan.innerText = character
        quoteDisplayElement.appendChild(characterSpan)
    })
    quote.split(' ').forEach(word => {
        const wordSpan = document.createElement('p')
        wordSpan.innerText = word
    })
    /* Remove quote inside the textarea */
    quoteInputElement.value = null
    /* RUN COUNTDOWN TIMER */
}

/* ----------------------------- */
/* Game Timer Configuration */
/* ----------------------------- */

function startTimer(duration, display) {
    var timer = duration, minutes, seconds;
    var config = setInterval(function () {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);

        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;

        display.textContent = minutes + ":" + seconds;

        if (--timer < 0) {
            if (TotalCPM > 1000 || TotalWPM > 200) {
                TotalCPM = 0;
                CPM = 0;
                TotalWPM = 0;
                WPM = 0;
                WpmElement.innerText = "0";
                CpmElement.innerText = "0";
                clearInterval(config)
            }
            timer = 0;
            timerElement.innerHTML = "Time is up!"
            TimeendElement.innerHTML = 'Try again?'
            TimeendElement.classList.add('containerend')
            CharElement.style.display = "block"
            WordElement.style.display = "block"
            clearInterval(config)
        }
    }, 1000);
}


/* ----------------------------- */
/* Functions that load instantly at first */
/* ----------------------------- */

function fadeIn() {
    var fadec = document.getElementById('container');
    var fades = document.getElementById('score');
    var fadet = document.getElementById('timer');
    var fadep = document.getElementById('practice');
    var opacity = 0;
    var intervalID = setInterval(function () {

        if (opacity < 1) {
            opacity = opacity + 0.1
            fadec.style.opacity = opacity;
            fades.style.opacity = opacity;
            fadet.style.opacity = opacity;
            fadep.style.opacity = opacity;
        } else {
            clearInterval(intervalID);
        }
    }, 40);
}

function start(){
    CharElement.style.display = "none"
    WordElement.style.display = "none"
    var fiveMinutes = 60 * 1,
        display = document.querySelector('#timer');
    startTimer(fiveMinutes, display);
    // fadeOut()
    fadeIn()
    renderNewQuote()
}

window.addEventListener('DOMContentLoaded', start);

function ReturnHome(){
    window.location.href = "index"
}